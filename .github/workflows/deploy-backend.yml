name: Build & Deploy Backend

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image (sans secrets)
        run: |
          docker build -t myorg/dropshipping-backend:${{ github.sha }} ./backend

      - name: Push Docker image
        run: |
          docker push myorg/dropshipping-backend:${{ github.sha }}

      - name: Deploy to server (via SSH)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            mkdir -p /home/${{ secrets.SERVER_USER }}/backend

            # Génère .env sécurisé à chaque déploiement
            cat > /home/${{ secrets.SERVER_USER }}/backend/.env << EOF
            NODE_ENV=production
            PORT=3000
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRES_IN=1d
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_NAME=${{ secrets.DB_NAME }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            # ...etc.
            EOF

            docker pull myorg/dropshipping-backend:${{ github.sha }}

            # Arrête, supprime, relance proprement
            docker stop backend || true
            docker rm backend || true
            docker run -d \
              --name backend \
              --env-file /home/${{ secrets.SERVER_USER }}/backend/.env \
              -p 3000:3000 \
              --restart unless-stopped \
              myorg/dropshipping-backend:${{ github.sha }}

            docker image prune -f

      # Optionnel: healthcheck simple
      - name: Healthcheck Backend (HTTP 200 attendu)
        run: |
          sleep 15
          curl --fail http://${{ secrets.SERVER_HOST }}:3000/health || exit 1
