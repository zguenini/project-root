version: "3.9"

services:
  backend:
    build:
      context: ./backend
    container_name: backend-1
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      target: development   # Pour dev, change en "production" pour CI/prod
    container_name: frontend-1
    ports:
      - "3001:3000"        # Frontend Next.js écoute en 3000 dans le conteneur, exposé sur 3001 en local
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:15
    container_name: postgres-1
    restart: unless-stopped
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
    ports:
      - "5432:5432"
    volumes:
      - ./infrastructure/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-1
    restart: unless-stopped
    ports:
      - "6379:6379"

networks:
  default:
    name: myapp-network
